# Build config

images:
- 'gcr.io/$PROJECT_ID/python:$TAG_NAME'
- 'gcr.io/$PROJECT_ID/node:$TAG_NAME'
- 'gcr.io/$PROJECT_ID/nginx:$TAG_NAME'

substitutions:
  _HOST: linksight.thinkingmachin.es

secrets:
- kmsKeyName: projects/linksight-208514/locations/global/keyRings/linksight/cryptoKeys/linksight
  secretEnv:
    SLACK_WEBHOOK: CiQAyqhYTzV2rjhqMlxev10hw99OHfRaBqSExolAiDFsla+dmW4SdwCl9n41cIV/5VSiNrQnqrkGvRAS29uJpy330EusajpZ9QwJz7SzOlqGZKFBWjrWFHriHIyZg7HWSNPFk/RXuK3sOP2gK0tbrT+p2Mpdiw2VE+QNToodDM3WGfv7HPccati0Q/Tvd4I58VpR98YyY7AUBQzLMDEI

steps:

# Pull images for faster builds

- name: 'gcr.io/cloud-builders/docker'
  id: pull-python
  waitFor: ['-']
  entrypoint: bash
  args: ['-c', 'docker pull gcr.io/$PROJECT_ID/python:$TAG_NAME || true']

- name: 'gcr.io/cloud-builders/docker'
  id: pull-node
  waitFor: ['-']
  entrypoint: bash
  args: ['-c', 'docker pull gcr.io/$PROJECT_ID/node:$TAG_NAME || true']

- name: 'gcr.io/cloud-builders/docker'
  id: pull-nginx
  waitFor: ['-']
  entrypoint: bash
  args: ['-c', 'docker pull gcr.io/$PROJECT_ID/nginx:$TAG_NAME || true']

# Setup environment variables

- name: 'gcr.io/cloud-builders/gcloud'
  id: decrypt-env
  waitFor: ['-']
  args:
  - kms
  - decrypt
  - '--ciphertext-file=deploy/$TAG_NAME.env.enc'
  - --plaintext-file=.env
  - --location=global
  - --keyring=linksight
  - --key=linksight

# Build images

- name: 'gcr.io/cloud-builders/docker'
  id: build-python
  waitFor: ['decrypt-env', 'pull-python']
  args:
  - build
  - -f=deploy/Dockerfile.python
  - '-t=gcr.io/$PROJECT_ID/python:$TAG_NAME'
  - '-t=gcr.io/$PROJECT_ID/python:$BUILD_ID'
  - '--cache-from=gcr.io/$PROJECT_ID/python:$TAG_NAME'
  - .

- name: 'gcr.io/cloud-builders/docker'
  id: build-node
  waitFor: ['pull-node']
  args:
  - build
  - -f=deploy/Dockerfile.node
  - --build-arg
  - 'PUBLIC_URL=https://$_HOST'
  - '-t=gcr.io/$PROJECT_ID/node:$TAG_NAME'
  - '-t=gcr.io/$PROJECT_ID/node:$BUILD_ID'
  - '--cache-from=gcr.io/$PROJECT_ID/node:$TAG_NAME'
  - .

- name: 'gcr.io/cloud-builders/docker'
  id: build-nginx
  waitFor: ['pull-nginx', 'build-python', 'build-node']
  args:
  - build
  - -f=deploy/Dockerfile.nginx
  - '-t=gcr.io/$PROJECT_ID/nginx:$TAG_NAME'
  - '-t=gcr.io/$PROJECT_ID/nginx:$BUILD_ID'
  - '--cache-from=gcr.io/$PROJECT_ID/nginx:$TAG_NAME'
  - .

# Push images to GCR

- name: 'gcr.io/cloud-builders/docker'
  id: push-python
  waitFor: ['build-python']
  args: ['push', 'gcr.io/$PROJECT_ID/python:$BUILD_ID']

- name: 'gcr.io/cloud-builders/docker'
  id: push-node
  waitFor: ['build-node']
  args: ['push', 'gcr.io/$PROJECT_ID/node:$BUILD_ID']

- name: 'gcr.io/cloud-builders/docker'
  id: push-nginx
  waitFor: ['build-nginx']
  args: ['push', 'gcr.io/$PROJECT_ID/nginx:$BUILD_ID']

# Decrypt docker certs

- name: 'gcr.io/cloud-builders/gcloud'
  id: decrypt-ca
  waitFor: ['-']
  args:
  - kms
  - decrypt
  - --ciphertext-file=deploy/ca.pem.enc
  - --plaintext-file=ca.pem
  - --location=global
  - --keyring=linksight
  - --key=linksight

- name: 'gcr.io/cloud-builders/gcloud'
  id: decrypt-cert
  waitFor: ['-']
  args:
  - kms
  - decrypt
  - --ciphertext-file=deploy/cert.pem.enc
  - --plaintext-file=cert.pem
  - --location=global
  - --keyring=linksight
  - --key=linksight

- name: 'gcr.io/cloud-builders/gcloud'
  id: decrypt-key
  waitFor: ['-']
  args:
  - kms
  - decrypt
  - --ciphertext-file=deploy/key.pem.enc
  - --plaintext-file=key.pem
  - --location=global
  - --keyring=linksight
  - --key=linksight

# Update services

- name: 'docker/compose:1.22.0'
  id: compose-pull
  waitFor: ['push-python', 'push-nginx', 'decrypt-ca', 'decrypt-cert', 'decrypt-key']
  args: ['-p', 'linksight', '-f', 'deploy/docker-compose.yml', 'pull']
  env:
  - 'DOCKER_HOST=$_HOST:2376'
  - DOCKER_TLS_VERIFY=1
  - DOCKER_CERT_PATH=.
  - 'BUILD_ID=$BUILD_ID'

- name: 'docker/compose:1.22.0'
  id: compose-up
  waitFor: ['compose-pull']
  args: ['-p', 'linksight', '-f', 'deploy/docker-compose.yml', 'up', '-d']
  env:
  - 'DOCKER_HOST=$_HOST:2376'
  - DOCKER_TLS_VERIFY=1
  - DOCKER_CERT_PATH=.
  - 'BUILD_ID=$BUILD_ID'

# Prune and notify

- name: 'gcr.io/cloud-builders/docker'
  id: docker-prune
  waitFor: ['compose-up']
  args: ['system', 'prune', '-f']

- name: 'gcr.io/cloud-builders/curl'
  id: slack-webhook
  waitFor: ['docker-prune']
  entrypoint: bash
  args:
  - -c
  - >
    curl \
      -X POST \
      -H 'Content-type: application/json' \
      --data '{"text": "Deployed `$BUILD_ID` to `$TAG_NAME`: $_HOST"}' \
      $$SLACK_WEBHOOK
  secretEnv: ['SLACK_WEBHOOK']

